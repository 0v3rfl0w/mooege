// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.notification {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class Notification {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_notification_Notification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.Notification, global::bnet.protocol.notification.Notification.Builder> internal__static_bnet_protocol_notification_Notification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_notification_FindClientRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.FindClientRequest, global::bnet.protocol.notification.FindClientRequest.Builder> internal__static_bnet_protocol_notification_FindClientRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_notification_FindClientResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.FindClientResponse, global::bnet.protocol.notification.FindClientResponse.Builder> internal__static_bnet_protocol_notification_FindClientResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_notification_RegisterClientRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.RegisterClientRequest, global::bnet.protocol.notification.RegisterClientRequest.Builder> internal__static_bnet_protocol_notification_RegisterClientRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_notification_UnregisterClientRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.UnregisterClientRequest, global::bnet.protocol.notification.UnregisterClientRequest.Builder> internal__static_bnet_protocol_notification_UnregisterClientRequest__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Notification() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "CjJzZXJ2aWNlL25vdGlmaWNhdGlvbi9kZWZpbml0aW9uL25vdGlmaWNhdGlv" + 
            "bi5wcm90bxIaYm5ldC5wcm90b2NvbC5ub3RpZmljYXRpb24aHGxpYi9wcm90" + 
            "b2NvbC9hdHRyaWJ1dGUucHJvdG8aGWxpYi9wcm90b2NvbC9lbnRpdHkucHJv" + 
            "dG8aEWxpYi9ycGMvcnBjLnByb3RvIuEBCgxOb3RpZmljYXRpb24SKgoJc2Vu" + 
            "ZGVyX2lkGAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBI0ChNzZW5k" + 
            "ZXJfZ2FtZV9hY2NvdW50GAIgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
            "ZBIqCgl0YXJnZXRfaWQYAyACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlk" + 
            "EgwKBHR5cGUYBCACKAkSNQoJYXR0cmlidXRlGAUgAygLMiIuYm5ldC5wcm90" + 
            "b2NvbC5hdHRyaWJ1dGUuQXR0cmlidXRlIj8KEUZpbmRDbGllbnRSZXF1ZXN0" + 
            "EioKCWVudGl0eV9pZBgBIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQi" + 
            "WAoSRmluZENsaWVudFJlc3BvbnNlEg0KBWxhYmVsGAEgAigNEjMKEWNsaWVu" + 
            "dF9wcm9jZXNzX2lkGAIgASgLMhguYm5ldC5wcm90b2NvbC5Qcm9jZXNzSWQi" + 
            "QwoVUmVnaXN0ZXJDbGllbnRSZXF1ZXN0EioKCWVudGl0eV9pZBgBIAIoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQiRQoXVW5yZWdpc3RlckNsaWVudFJl" + 
            "cXVlc3QSKgoJZW50aXR5X2lkGAEgAigLMhcuYm5ldC5wcm90b2NvbC5FbnRp" + 
            "dHlJZDKrAwoTTm90aWZpY2F0aW9uU2VydmljZRJZChBTZW5kTm90aWZpY2F0" + 
            "aW9uEiguYm5ldC5wcm90b2NvbC5ub3RpZmljYXRpb24uTm90aWZpY2F0aW9u" + 
            "GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GAESYAoOUmVnaXN0ZXJDbGll" + 
            "bnQSMS5ibmV0LnByb3RvY29sLm5vdGlmaWNhdGlvbi5SZWdpc3RlckNsaWVu" + 
            "dFJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIEgLUYAhJkChBVbnJl" + 
            "Z2lzdGVyQ2xpZW50EjMuYm5ldC5wcm90b2NvbC5ub3RpZmljYXRpb24uVW5y" + 
            "ZWdpc3RlckNsaWVudFJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIE" + 
            "gLUYAxJxCgpGaW5kQ2xpZW50Ei0uYm5ldC5wcm90b2NvbC5ub3RpZmljYXRp" + 
            "b24uRmluZENsaWVudFJlcXVlc3QaLi5ibmV0LnByb3RvY29sLm5vdGlmaWNh" + 
            "dGlvbi5GaW5kQ2xpZW50UmVzcG9uc2UiBIC1GAQyfAoUTm90aWZpY2F0aW9u" + 
            "TGlzdGVuZXISZAoWT25Ob3RpZmljYXRpb25SZWNlaXZlZBIoLmJuZXQucHJv" + 
            "dG9jb2wubm90aWZpY2F0aW9uLk5vdGlmaWNhdGlvbhoaLmJuZXQucHJvdG9j" + 
            "b2wuTk9fUkVTUE9OU0UiBIC1GAFCA4ABAA==");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_notification_Notification__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_notification_Notification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.Notification, global::bnet.protocol.notification.Notification.Builder>(internal__static_bnet_protocol_notification_Notification__Descriptor,
                  new string[] { "Senderd", "SenderGameAccount", "Targetd", "Type", "Attribute", });
          internal__static_bnet_protocol_notification_FindClientRequest__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_notification_FindClientRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.FindClientRequest, global::bnet.protocol.notification.FindClientRequest.Builder>(internal__static_bnet_protocol_notification_FindClientRequest__Descriptor,
                  new string[] { "Entityd", });
          internal__static_bnet_protocol_notification_FindClientResponse__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_notification_FindClientResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.FindClientResponse, global::bnet.protocol.notification.FindClientResponse.Builder>(internal__static_bnet_protocol_notification_FindClientResponse__Descriptor,
                  new string[] { "Label", "ClientProcessd", });
          internal__static_bnet_protocol_notification_RegisterClientRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_notification_RegisterClientRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.RegisterClientRequest, global::bnet.protocol.notification.RegisterClientRequest.Builder>(internal__static_bnet_protocol_notification_RegisterClientRequest__Descriptor,
                  new string[] { "Entityd", });
          internal__static_bnet_protocol_notification_UnregisterClientRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_notification_UnregisterClientRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.notification.UnregisterClientRequest, global::bnet.protocol.notification.UnregisterClientRequest.Builder>(internal__static_bnet_protocol_notification_UnregisterClientRequest__Descriptor,
                  new string[] { "Entityd", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Notification : pb::GeneratedMessage<Notification, Notification.Builder> {
    private Notification() { }
    private static readonly Notification defaultInstance = new Notification().MakeReadOnly();
    private static readonly string[] _notificationFieldNames = new string[] { "attribute", "sender_game_account", "sender_id", "target_id", "type" };
    private static readonly uint[] _notificationFieldTags = new uint[] { 42, 18, 10, 26, 34 };
    public static Notification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Notification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Notification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_Notification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Notification, Notification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_Notification__FieldAccessorTable; }
    }
    
    public const int SenderdFieldNumber = 1;
    private bool hasSenderd;
    private global::bnet.protocol.EntityId senderd_;
    public bool HasSenderd {
      get { return hasSenderd; }
    }
    public global::bnet.protocol.EntityId Senderd {
      get { return senderd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SenderGameAccountFieldNumber = 2;
    private bool hasSenderGameAccount;
    private global::bnet.protocol.EntityId senderGameAccount_;
    public bool HasSenderGameAccount {
      get { return hasSenderGameAccount; }
    }
    public global::bnet.protocol.EntityId SenderGameAccount {
      get { return senderGameAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetdFieldNumber = 3;
    private bool hasTargetd;
    private global::bnet.protocol.EntityId targetd_;
    public bool HasTargetd {
      get { return hasTargetd; }
    }
    public global::bnet.protocol.EntityId Targetd {
      get { return targetd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int AttributeFieldNumber = 5;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetd) return false;
        if (!hasType) return false;
        if (HasSenderd) {
          if (!Senderd.IsInitialized) return false;
        }
        if (HasSenderGameAccount) {
          if (!SenderGameAccount.IsInitialized) return false;
        }
        if (!Targetd.IsInitialized) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _notificationFieldNames;
      if (hasSenderd) {
        output.WriteMessage(1, field_names[2], Senderd);
      }
      if (hasSenderGameAccount) {
        output.WriteMessage(2, field_names[1], SenderGameAccount);
      }
      if (hasTargetd) {
        output.WriteMessage(3, field_names[3], Targetd);
      }
      if (hasType) {
        output.WriteString(4, field_names[4], Type);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(5, field_names[0], attribute_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSenderd) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Senderd);
        }
        if (hasSenderGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SenderGameAccount);
        }
        if (hasTargetd) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Targetd);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Type);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Notification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Notification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Notification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Notification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Notification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Notification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Notification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Notification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Notification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Notification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Notification MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Notification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Notification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Notification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Notification result;
      
      private Notification PrepareBuilder() {
        if (resultIsReadOnly) {
          Notification original = result;
          result = new Notification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Notification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.notification.Notification.Descriptor; }
      }
      
      public override Notification DefaultInstanceForType {
        get { return global::bnet.protocol.notification.Notification.DefaultInstance; }
      }
      
      public override Notification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Notification) {
          return MergeFrom((Notification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Notification other) {
        if (other == global::bnet.protocol.notification.Notification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSenderd) {
          MergeSenderd(other.Senderd);
        }
        if (other.HasSenderGameAccount) {
          MergeSenderGameAccount(other.SenderGameAccount);
        }
        if (other.HasTargetd) {
          MergeTargetd(other.Targetd);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_notificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _notificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasSenderd) {
                subBuilder.MergeFrom(Senderd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Senderd = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasSenderGameAccount) {
                subBuilder.MergeFrom(SenderGameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderGameAccount = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetd) {
                subBuilder.MergeFrom(Targetd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Targetd = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasType = input.ReadString(ref result.type_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSenderd {
       get { return result.hasSenderd; }
      }
      public global::bnet.protocol.EntityId Senderd {
        get { return result.Senderd; }
        set { SetSenderd(value); }
      }
      public Builder SetSenderd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderd = true;
        result.senderd_ = value;
        return this;
      }
      public Builder SetSenderd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderd = true;
        result.senderd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderd &&
            result.senderd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.senderd_ = global::bnet.protocol.EntityId.CreateBuilder(result.senderd_).MergeFrom(value).BuildPartial();
        } else {
          result.senderd_ = value;
        }
        result.hasSenderd = true;
        return this;
      }
      public Builder ClearSenderd() {
        PrepareBuilder();
        result.hasSenderd = false;
        result.senderd_ = null;
        return this;
      }
      
      public bool HasSenderGameAccount {
       get { return result.hasSenderGameAccount; }
      }
      public global::bnet.protocol.EntityId SenderGameAccount {
        get { return result.SenderGameAccount; }
        set { SetSenderGameAccount(value); }
      }
      public Builder SetSenderGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderGameAccount = true;
        result.senderGameAccount_ = value;
        return this;
      }
      public Builder SetSenderGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderGameAccount = true;
        result.senderGameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderGameAccount &&
            result.senderGameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.senderGameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.senderGameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.senderGameAccount_ = value;
        }
        result.hasSenderGameAccount = true;
        return this;
      }
      public Builder ClearSenderGameAccount() {
        PrepareBuilder();
        result.hasSenderGameAccount = false;
        result.senderGameAccount_ = null;
        return this;
      }
      
      public bool HasTargetd {
       get { return result.hasTargetd; }
      }
      public global::bnet.protocol.EntityId Targetd {
        get { return result.Targetd; }
        set { SetTargetd(value); }
      }
      public Builder SetTargetd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetd = true;
        result.targetd_ = value;
        return this;
      }
      public Builder SetTargetd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetd = true;
        result.targetd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetd &&
            result.targetd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetd_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetd_).MergeFrom(value).BuildPartial();
        } else {
          result.targetd_ = value;
        }
        result.hasTargetd = true;
        return this;
      }
      public Builder ClearTargetd() {
        PrepareBuilder();
        result.hasTargetd = false;
        result.targetd_ = null;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
    }
    static Notification() {
      object.ReferenceEquals(global::bnet.protocol.notification.Proto.Notification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FindClientRequest : pb::GeneratedMessage<FindClientRequest, FindClientRequest.Builder> {
    private FindClientRequest() { }
    private static readonly FindClientRequest defaultInstance = new FindClientRequest().MakeReadOnly();
    private static readonly string[] _findClientRequestFieldNames = new string[] { "entity_id" };
    private static readonly uint[] _findClientRequestFieldTags = new uint[] { 10 };
    public static FindClientRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindClientRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FindClientRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_FindClientRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindClientRequest, FindClientRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_FindClientRequest__FieldAccessorTable; }
    }
    
    public const int EntitydFieldNumber = 1;
    private bool hasEntityd;
    private global::bnet.protocol.EntityId entityd_;
    public bool HasEntityd {
      get { return hasEntityd; }
    }
    public global::bnet.protocol.EntityId Entityd {
      get { return entityd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityd) return false;
        if (!Entityd.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findClientRequestFieldNames;
      if (hasEntityd) {
        output.WriteMessage(1, field_names[0], Entityd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityd) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entityd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindClientRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindClientRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindClientRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindClientRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindClientRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindClientRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindClientRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindClientRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindClientRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindClientRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FindClientRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindClientRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindClientRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FindClientRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FindClientRequest result;
      
      private FindClientRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          FindClientRequest original = result;
          result = new FindClientRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FindClientRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.notification.FindClientRequest.Descriptor; }
      }
      
      public override FindClientRequest DefaultInstanceForType {
        get { return global::bnet.protocol.notification.FindClientRequest.DefaultInstance; }
      }
      
      public override FindClientRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindClientRequest) {
          return MergeFrom((FindClientRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindClientRequest other) {
        if (other == global::bnet.protocol.notification.FindClientRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityd) {
          MergeEntityd(other.Entityd);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findClientRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findClientRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasEntityd) {
                subBuilder.MergeFrom(Entityd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entityd = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityd {
       get { return result.hasEntityd; }
      }
      public global::bnet.protocol.EntityId Entityd {
        get { return result.Entityd; }
        set { SetEntityd(value); }
      }
      public Builder SetEntityd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityd = true;
        result.entityd_ = value;
        return this;
      }
      public Builder SetEntityd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityd = true;
        result.entityd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityd &&
            result.entityd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.entityd_ = global::bnet.protocol.EntityId.CreateBuilder(result.entityd_).MergeFrom(value).BuildPartial();
        } else {
          result.entityd_ = value;
        }
        result.hasEntityd = true;
        return this;
      }
      public Builder ClearEntityd() {
        PrepareBuilder();
        result.hasEntityd = false;
        result.entityd_ = null;
        return this;
      }
    }
    static FindClientRequest() {
      object.ReferenceEquals(global::bnet.protocol.notification.Proto.Notification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FindClientResponse : pb::GeneratedMessage<FindClientResponse, FindClientResponse.Builder> {
    private FindClientResponse() { }
    private static readonly FindClientResponse defaultInstance = new FindClientResponse().MakeReadOnly();
    private static readonly string[] _findClientResponseFieldNames = new string[] { "client_process_id", "label" };
    private static readonly uint[] _findClientResponseFieldTags = new uint[] { 18, 8 };
    public static FindClientResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FindClientResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FindClientResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_FindClientResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FindClientResponse, FindClientResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_FindClientResponse__FieldAccessorTable; }
    }
    
    public const int LabelFieldNumber = 1;
    private bool hasLabel;
    private uint label_;
    public bool HasLabel {
      get { return hasLabel; }
    }
    public uint Label {
      get { return label_; }
    }
    
    public const int ClientProcessdFieldNumber = 2;
    private bool hasClientProcessd;
    private global::bnet.protocol.ProcessId clientProcessd_;
    public bool HasClientProcessd {
      get { return hasClientProcessd; }
    }
    public global::bnet.protocol.ProcessId ClientProcessd {
      get { return clientProcessd_ ?? global::bnet.protocol.ProcessId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLabel) return false;
        if (HasClientProcessd) {
          if (!ClientProcessd.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _findClientResponseFieldNames;
      if (hasLabel) {
        output.WriteUInt32(1, field_names[1], Label);
      }
      if (hasClientProcessd) {
        output.WriteMessage(2, field_names[0], ClientProcessd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLabel) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Label);
        }
        if (hasClientProcessd) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ClientProcessd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FindClientResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindClientResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindClientResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FindClientResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FindClientResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindClientResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FindClientResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FindClientResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FindClientResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FindClientResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FindClientResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FindClientResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FindClientResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FindClientResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FindClientResponse result;
      
      private FindClientResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          FindClientResponse original = result;
          result = new FindClientResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FindClientResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.notification.FindClientResponse.Descriptor; }
      }
      
      public override FindClientResponse DefaultInstanceForType {
        get { return global::bnet.protocol.notification.FindClientResponse.DefaultInstance; }
      }
      
      public override FindClientResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FindClientResponse) {
          return MergeFrom((FindClientResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FindClientResponse other) {
        if (other == global::bnet.protocol.notification.FindClientResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLabel) {
          Label = other.Label;
        }
        if (other.HasClientProcessd) {
          MergeClientProcessd(other.ClientProcessd);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_findClientResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _findClientResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLabel = input.ReadUInt32(ref result.label_);
              break;
            }
            case 18: {
              global::bnet.protocol.ProcessId.Builder subBuilder = global::bnet.protocol.ProcessId.CreateBuilder();
              if (result.hasClientProcessd) {
                subBuilder.MergeFrom(ClientProcessd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClientProcessd = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLabel {
        get { return result.hasLabel; }
      }
      public uint Label {
        get { return result.Label; }
        set { SetLabel(value); }
      }
      public Builder SetLabel(uint value) {
        PrepareBuilder();
        result.hasLabel = true;
        result.label_ = value;
        return this;
      }
      public Builder ClearLabel() {
        PrepareBuilder();
        result.hasLabel = false;
        result.label_ = 0;
        return this;
      }
      
      public bool HasClientProcessd {
       get { return result.hasClientProcessd; }
      }
      public global::bnet.protocol.ProcessId ClientProcessd {
        get { return result.ClientProcessd; }
        set { SetClientProcessd(value); }
      }
      public Builder SetClientProcessd(global::bnet.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientProcessd = true;
        result.clientProcessd_ = value;
        return this;
      }
      public Builder SetClientProcessd(global::bnet.protocol.ProcessId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClientProcessd = true;
        result.clientProcessd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClientProcessd(global::bnet.protocol.ProcessId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClientProcessd &&
            result.clientProcessd_ != global::bnet.protocol.ProcessId.DefaultInstance) {
            result.clientProcessd_ = global::bnet.protocol.ProcessId.CreateBuilder(result.clientProcessd_).MergeFrom(value).BuildPartial();
        } else {
          result.clientProcessd_ = value;
        }
        result.hasClientProcessd = true;
        return this;
      }
      public Builder ClearClientProcessd() {
        PrepareBuilder();
        result.hasClientProcessd = false;
        result.clientProcessd_ = null;
        return this;
      }
    }
    static FindClientResponse() {
      object.ReferenceEquals(global::bnet.protocol.notification.Proto.Notification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RegisterClientRequest : pb::GeneratedMessage<RegisterClientRequest, RegisterClientRequest.Builder> {
    private RegisterClientRequest() { }
    private static readonly RegisterClientRequest defaultInstance = new RegisterClientRequest().MakeReadOnly();
    private static readonly string[] _registerClientRequestFieldNames = new string[] { "entity_id" };
    private static readonly uint[] _registerClientRequestFieldTags = new uint[] { 10 };
    public static RegisterClientRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RegisterClientRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegisterClientRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_RegisterClientRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RegisterClientRequest, RegisterClientRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_RegisterClientRequest__FieldAccessorTable; }
    }
    
    public const int EntitydFieldNumber = 1;
    private bool hasEntityd;
    private global::bnet.protocol.EntityId entityd_;
    public bool HasEntityd {
      get { return hasEntityd; }
    }
    public global::bnet.protocol.EntityId Entityd {
      get { return entityd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityd) return false;
        if (!Entityd.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registerClientRequestFieldNames;
      if (hasEntityd) {
        output.WriteMessage(1, field_names[0], Entityd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityd) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entityd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RegisterClientRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RegisterClientRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RegisterClientRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RegisterClientRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegisterClientRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RegisterClientRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RegisterClientRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegisterClientRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegisterClientRequest result;
      
      private RegisterClientRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RegisterClientRequest original = result;
          result = new RegisterClientRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegisterClientRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.notification.RegisterClientRequest.Descriptor; }
      }
      
      public override RegisterClientRequest DefaultInstanceForType {
        get { return global::bnet.protocol.notification.RegisterClientRequest.DefaultInstance; }
      }
      
      public override RegisterClientRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RegisterClientRequest) {
          return MergeFrom((RegisterClientRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegisterClientRequest other) {
        if (other == global::bnet.protocol.notification.RegisterClientRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityd) {
          MergeEntityd(other.Entityd);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registerClientRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registerClientRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasEntityd) {
                subBuilder.MergeFrom(Entityd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entityd = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityd {
       get { return result.hasEntityd; }
      }
      public global::bnet.protocol.EntityId Entityd {
        get { return result.Entityd; }
        set { SetEntityd(value); }
      }
      public Builder SetEntityd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityd = true;
        result.entityd_ = value;
        return this;
      }
      public Builder SetEntityd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityd = true;
        result.entityd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityd &&
            result.entityd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.entityd_ = global::bnet.protocol.EntityId.CreateBuilder(result.entityd_).MergeFrom(value).BuildPartial();
        } else {
          result.entityd_ = value;
        }
        result.hasEntityd = true;
        return this;
      }
      public Builder ClearEntityd() {
        PrepareBuilder();
        result.hasEntityd = false;
        result.entityd_ = null;
        return this;
      }
    }
    static RegisterClientRequest() {
      object.ReferenceEquals(global::bnet.protocol.notification.Proto.Notification.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnregisterClientRequest : pb::GeneratedMessage<UnregisterClientRequest, UnregisterClientRequest.Builder> {
    private UnregisterClientRequest() { }
    private static readonly UnregisterClientRequest defaultInstance = new UnregisterClientRequest().MakeReadOnly();
    private static readonly string[] _unregisterClientRequestFieldNames = new string[] { "entity_id" };
    private static readonly uint[] _unregisterClientRequestFieldTags = new uint[] { 10 };
    public static UnregisterClientRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnregisterClientRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnregisterClientRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_UnregisterClientRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnregisterClientRequest, UnregisterClientRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.notification.Proto.Notification.internal__static_bnet_protocol_notification_UnregisterClientRequest__FieldAccessorTable; }
    }
    
    public const int EntitydFieldNumber = 1;
    private bool hasEntityd;
    private global::bnet.protocol.EntityId entityd_;
    public bool HasEntityd {
      get { return hasEntityd; }
    }
    public global::bnet.protocol.EntityId Entityd {
      get { return entityd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntityd) return false;
        if (!Entityd.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unregisterClientRequestFieldNames;
      if (hasEntityd) {
        output.WriteMessage(1, field_names[0], Entityd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasEntityd) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Entityd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnregisterClientRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnregisterClientRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnregisterClientRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnregisterClientRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnregisterClientRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnregisterClientRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnregisterClientRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnregisterClientRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnregisterClientRequest result;
      
      private UnregisterClientRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnregisterClientRequest original = result;
          result = new UnregisterClientRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnregisterClientRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.notification.UnregisterClientRequest.Descriptor; }
      }
      
      public override UnregisterClientRequest DefaultInstanceForType {
        get { return global::bnet.protocol.notification.UnregisterClientRequest.DefaultInstance; }
      }
      
      public override UnregisterClientRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnregisterClientRequest) {
          return MergeFrom((UnregisterClientRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnregisterClientRequest other) {
        if (other == global::bnet.protocol.notification.UnregisterClientRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntityd) {
          MergeEntityd(other.Entityd);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unregisterClientRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unregisterClientRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasEntityd) {
                subBuilder.MergeFrom(Entityd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entityd = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntityd {
       get { return result.hasEntityd; }
      }
      public global::bnet.protocol.EntityId Entityd {
        get { return result.Entityd; }
        set { SetEntityd(value); }
      }
      public Builder SetEntityd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntityd = true;
        result.entityd_ = value;
        return this;
      }
      public Builder SetEntityd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntityd = true;
        result.entityd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntityd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntityd &&
            result.entityd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.entityd_ = global::bnet.protocol.EntityId.CreateBuilder(result.entityd_).MergeFrom(value).BuildPartial();
        } else {
          result.entityd_ = value;
        }
        result.hasEntityd = true;
        return this;
      }
      public Builder ClearEntityd() {
        PrepareBuilder();
        result.hasEntityd = false;
        result.entityd_ = null;
        return this;
      }
    }
    static UnregisterClientRequest() {
      object.ReferenceEquals(global::bnet.protocol.notification.Proto.Notification.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class NotificationService : pb::IService {
    public abstract void SendNotification(
        pb::IRpcController controller,
        global::bnet.protocol.notification.Notification request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void RegisterClient(
        pb::IRpcController controller,
        global::bnet.protocol.notification.RegisterClientRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnregisterClient(
        pb::IRpcController controller,
        global::bnet.protocol.notification.UnregisterClientRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void FindClient(
        pb::IRpcController controller,
        global::bnet.protocol.notification.FindClientRequest request,
        global::System.Action<global::bnet.protocol.notification.FindClientResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.Notification.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.SendNotification(controller, (global::bnet.protocol.notification.Notification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 1:
          this.RegisterClient(controller, (global::bnet.protocol.notification.RegisterClientRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 2:
          this.UnregisterClient(controller, (global::bnet.protocol.notification.UnregisterClientRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 3:
          this.FindClient(controller, (global::bnet.protocol.notification.FindClientRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.notification.FindClientResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.notification.Notification.DefaultInstance;
        case 1:
          return global::bnet.protocol.notification.RegisterClientRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.notification.UnregisterClientRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.notification.FindClientRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 2:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 3:
          return global::bnet.protocol.notification.FindClientResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.notification.NotificationService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void SendNotification(
          pb::IRpcController controller,
          global::bnet.protocol.notification.Notification request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void RegisterClient(
          pb::IRpcController controller,
          global::bnet.protocol.notification.RegisterClientRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnregisterClient(
          pb::IRpcController controller,
          global::bnet.protocol.notification.UnregisterClientRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void FindClient(
          pb::IRpcController controller,
          global::bnet.protocol.notification.FindClientRequest request,
          global::System.Action<global::bnet.protocol.notification.FindClientResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.notification.FindClientResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.notification.FindClientResponse, global::bnet.protocol.notification.FindClientResponse.Builder>(done, global::bnet.protocol.notification.FindClientResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class NotificationListener : pb::IService {
    public abstract void OnNotificationReceived(
        pb::IRpcController controller,
        global::bnet.protocol.notification.Notification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.Notification.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.OnNotificationReceived(controller, (global::bnet.protocol.notification.Notification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.notification.Notification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.notification.NotificationListener {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void OnNotificationReceived(
          pb::IRpcController controller,
          global::bnet.protocol.notification.Notification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
