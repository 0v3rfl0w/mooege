// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.invitation {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class İnvitation {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_Invitation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Invitation, global::bnet.protocol.invitation.Invitation.Builder> internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_Suggestion__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Suggestion, global::bnet.protocol.invitation.Suggestion.Builder> internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationRequest, global::bnet.protocol.invitation.SendInvitationRequest.Builder> internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder> internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_GenericRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.GenericRequest, global::bnet.protocol.invitation.GenericRequest.Builder> internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static İnvitation() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Ch1saWIvcHJvdG9jb2wvaW52aXRhdGlvbi5wcm90bxIYYm5ldC5wcm90b2Nv" + 
          "bC5pbnZpdGF0aW9uGhxsaWIvcHJvdG9jb2wvYXR0cmlidXRlLnByb3RvGhls" + 
          "aWIvcHJvdG9jb2wvZW50aXR5LnByb3RvIv0BCgpJbnZpdGF0aW9uEgoKAmlk" + 
          "GAEgAigGEjEKEGludml0ZXJfaWRlbnRpdHkYAiACKAsyFy5ibmV0LnByb3Rv" + 
          "Y29sLklkZW50aXR5EjEKEGludml0ZWVfaWRlbnRpdHkYAyACKAsyFy5ibmV0" + 
          "LnByb3RvY29sLklkZW50aXR5EhQKDGludml0ZXJfbmFtZRgEIAEoCRIUCgxp" + 
          "bnZpdGVlX25hbWUYBSABKAkSGgoSaW52aXRhdGlvbl9tZXNzYWdlGAYgASgJ" + 
          "EhUKDWNyZWF0aW9uX3RpbWUYByABKAQSFwoPZXhwaXJhdGlvbl90aW1lGAgg" + 
          "ASgEKgUIZBCRTiLHAQoKU3VnZ2VzdGlvbhIrCgpjaGFubmVsX2lkGAEgASgL" + 
          "MhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBItCgxzdWdnZXN0ZXJfaWQYAiAC" + 
          "KAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEi0KDHN1Z2dlc3RlZV9pZBgD" + 
          "IAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSFgoOc3VnZ2VzdGVyX25h" + 
          "bWUYBCABKAkSFgoOc3VnZ2VzdGVlX25hbWUYBSABKAkiswEKFVNlbmRJbnZp" + 
          "dGF0aW9uUmVxdWVzdBIvCg5hZ2VudF9pZGVudGl0eRgBIAEoCzIXLmJuZXQu" + 
          "cHJvdG9jb2wuSWRlbnRpdHkSKgoJdGFyZ2V0X2lkGAIgAigLMhcuYm5ldC5w" + 
          "cm90b2NvbC5FbnRpdHlJZBIaChJpbnZpdGF0aW9uX21lc3NhZ2UYAyABKAkS" + 
          "GgoPZXhwaXJhdGlvbl90aW1lGAQgASgEOgEwKgUIZBCRTiJSChZTZW5kSW52" + 
          "aXRhdGlvblJlc3BvbnNlEjgKCmludml0YXRpb24YAiABKAsyJC5ibmV0LnBy" + 
          "b3RvY29sLmludml0YXRpb24uSW52aXRhdGlvbiJ+Cg5HZW5lcmljUmVxdWVz" + 
          "dBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQS" + 
          "KgoJdGFyZ2V0X2lkGAIgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIV" + 
          "Cg1pbnZpdGF0aW9uX2lkGAMgAigG");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_invitation_Invitation__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Invitation, global::bnet.protocol.invitation.Invitation.Builder>(internal__static_bnet_protocol_invitation_Invitation__Descriptor,
                new string[] { "İd", "İnviterdentity", "İnviteedentity", "İnviterName", "İnviteeName", "İnvitationMessage", "CreationTime", "ExpirationTime", });
        internal__static_bnet_protocol_invitation_Suggestion__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Suggestion, global::bnet.protocol.invitation.Suggestion.Builder>(internal__static_bnet_protocol_invitation_Suggestion__Descriptor,
                new string[] { "Channeld", "Suggesterd", "Suggesteed", "SuggesterName", "SuggesteeName", });
        internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationRequest, global::bnet.protocol.invitation.SendInvitationRequest.Builder>(internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor,
                new string[] { "Agentdentity", "Targetd", "İnvitationMessage", "ExpirationTime", });
        internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder>(internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor,
                new string[] { "İnvitation", });
        internal__static_bnet_protocol_invitation_GenericRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.GenericRequest, global::bnet.protocol.invitation.GenericRequest.Builder>(internal__static_bnet_protocol_invitation_GenericRequest__Descriptor,
                new string[] { "Agentd", "Targetd", "İnvitationd", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Invitation : pb::ExtendableMessage<Invitation, Invitation.Builder> {
    private Invitation() { }
    private static readonly Invitation defaultInstance = new Invitation().MakeReadOnly();
    private static readonly string[] _ınvitationFieldNames = new string[] { "creation_time", "expiration_time", "id", "invitation_message", "invitee_identity", "invitee_name", "inviter_identity", "inviter_name" };
    private static readonly uint[] _ınvitationFieldTags = new uint[] { 56, 64, 9, 50, 26, 42, 18, 34 };
    public static Invitation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Invitation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Invitation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_Invitation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Invitation, Invitation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable; }
    }
    
    public const int İdFieldNumber = 1;
    private bool hasİd;
    private ulong id_;
    public bool Hasİd {
      get { return hasİd; }
    }
    public ulong İd {
      get { return id_; }
    }
    
    public const int İnviterdentityFieldNumber = 2;
    private bool hasİnviterdentity;
    private global::bnet.protocol.Identity inviterdentity_;
    public bool Hasİnviterdentity {
      get { return hasİnviterdentity; }
    }
    public global::bnet.protocol.Identity İnviterdentity {
      get { return inviterdentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int İnviteedentityFieldNumber = 3;
    private bool hasİnviteedentity;
    private global::bnet.protocol.Identity inviteedentity_;
    public bool Hasİnviteedentity {
      get { return hasİnviteedentity; }
    }
    public global::bnet.protocol.Identity İnviteedentity {
      get { return inviteedentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int İnviterNameFieldNumber = 4;
    private bool hasİnviterName;
    private string inviterName_ = "";
    public bool HasİnviterName {
      get { return hasİnviterName; }
    }
    public string İnviterName {
      get { return inviterName_; }
    }
    
    public const int İnviteeNameFieldNumber = 5;
    private bool hasİnviteeName;
    private string inviteeName_ = "";
    public bool HasİnviteeName {
      get { return hasİnviteeName; }
    }
    public string İnviteeName {
      get { return inviteeName_; }
    }
    
    public const int İnvitationMessageFieldNumber = 6;
    private bool hasİnvitationMessage;
    private string invitationMessage_ = "";
    public bool HasİnvitationMessage {
      get { return hasİnvitationMessage; }
    }
    public string İnvitationMessage {
      get { return invitationMessage_; }
    }
    
    public const int CreationTimeFieldNumber = 7;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 8;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasİd) return false;
        if (!hasİnviterdentity) return false;
        if (!hasİnviteedentity) return false;
        if (!İnviterdentity.IsInitialized) return false;
        if (!İnviteedentity.IsInitialized) return false;
        if (!ExtensionsAreInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ınvitationFieldNames;
      pb::ExtendableMessage<Invitation, Invitation.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
      if (hasİd) {
        output.WriteFixed64(1, field_names[2], İd);
      }
      if (hasİnviterdentity) {
        output.WriteMessage(2, field_names[6], İnviterdentity);
      }
      if (hasİnviteedentity) {
        output.WriteMessage(3, field_names[4], İnviteedentity);
      }
      if (hasİnviterName) {
        output.WriteString(4, field_names[7], İnviterName);
      }
      if (hasİnviteeName) {
        output.WriteString(5, field_names[5], İnviteeName);
      }
      if (hasİnvitationMessage) {
        output.WriteString(6, field_names[3], İnvitationMessage);
      }
      if (hasCreationTime) {
        output.WriteUInt64(7, field_names[0], CreationTime);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(8, field_names[1], ExpirationTime);
      }
      extensionWriter.WriteUntil(10001, output);
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasİd) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, İd);
        }
        if (hasİnviterdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, İnviterdentity);
        }
        if (hasİnviteedentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, İnviteedentity);
        }
        if (hasİnviterName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, İnviterName);
        }
        if (hasİnviteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, İnviteeName);
        }
        if (hasİnvitationMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(6, İnvitationMessage);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreationTime);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ExpirationTime);
        }
        size += ExtensionsSerializedSize;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Invitation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Invitation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Invitation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Invitation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Invitation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Invitation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::ExtendableBuilder<Invitation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Invitation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Invitation result;
      
      private Invitation PrepareBuilder() {
        if (resultIsReadOnly) {
          Invitation original = result;
          result = new Invitation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Invitation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.Invitation.Descriptor; }
      }
      
      public override Invitation DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.Invitation.DefaultInstance; }
      }
      
      public override Invitation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Invitation) {
          return MergeFrom((Invitation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Invitation other) {
        if (other == global::bnet.protocol.invitation.Invitation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.Hasİd) {
          İd = other.İd;
        }
        if (other.Hasİnviterdentity) {
          Mergeİnviterdentity(other.İnviterdentity);
        }
        if (other.Hasİnviteedentity) {
          Mergeİnviteedentity(other.İnviteedentity);
        }
        if (other.HasİnviterName) {
          İnviterName = other.İnviterName;
        }
        if (other.HasİnviteeName) {
          İnviteeName = other.İnviteeName;
        }
        if (other.HasİnvitationMessage) {
          İnvitationMessage = other.İnvitationMessage;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
          this.MergeExtensionFields(other);
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ınvitationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ınvitationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasİd = input.ReadFixed64(ref result.id_);
              break;
            }
            case 18: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasİnviterdentity) {
                subBuilder.MergeFrom(İnviterdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              İnviterdentity = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasİnviteedentity) {
                subBuilder.MergeFrom(İnviteedentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              İnviteedentity = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasİnviterName = input.ReadString(ref result.inviterName_);
              break;
            }
            case 42: {
              result.hasİnviteeName = input.ReadString(ref result.inviteeName_);
              break;
            }
            case 50: {
              result.hasİnvitationMessage = input.ReadString(ref result.invitationMessage_);
              break;
            }
            case 56: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 64: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool Hasİd {
        get { return result.hasİd; }
      }
      public ulong İd {
        get { return result.İd; }
        set { Setİd(value); }
      }
      public Builder Setİd(ulong value) {
        PrepareBuilder();
        result.hasİd = true;
        result.id_ = value;
        return this;
      }
      public Builder Clearİd() {
        PrepareBuilder();
        result.hasİd = false;
        result.id_ = 0;
        return this;
      }
      
      public bool Hasİnviterdentity {
       get { return result.hasİnviterdentity; }
      }
      public global::bnet.protocol.Identity İnviterdentity {
        get { return result.İnviterdentity; }
        set { Setİnviterdentity(value); }
      }
      public Builder Setİnviterdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnviterdentity = true;
        result.inviterdentity_ = value;
        return this;
      }
      public Builder Setİnviterdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasİnviterdentity = true;
        result.inviterdentity_ = builderForValue.Build();
        return this;
      }
      public Builder Mergeİnviterdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasİnviterdentity &&
            result.inviterdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.inviterdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.inviterdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.inviterdentity_ = value;
        }
        result.hasİnviterdentity = true;
        return this;
      }
      public Builder Clearİnviterdentity() {
        PrepareBuilder();
        result.hasİnviterdentity = false;
        result.inviterdentity_ = null;
        return this;
      }
      
      public bool Hasİnviteedentity {
       get { return result.hasİnviteedentity; }
      }
      public global::bnet.protocol.Identity İnviteedentity {
        get { return result.İnviteedentity; }
        set { Setİnviteedentity(value); }
      }
      public Builder Setİnviteedentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnviteedentity = true;
        result.inviteedentity_ = value;
        return this;
      }
      public Builder Setİnviteedentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasİnviteedentity = true;
        result.inviteedentity_ = builderForValue.Build();
        return this;
      }
      public Builder Mergeİnviteedentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasİnviteedentity &&
            result.inviteedentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.inviteedentity_ = global::bnet.protocol.Identity.CreateBuilder(result.inviteedentity_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteedentity_ = value;
        }
        result.hasİnviteedentity = true;
        return this;
      }
      public Builder Clearİnviteedentity() {
        PrepareBuilder();
        result.hasİnviteedentity = false;
        result.inviteedentity_ = null;
        return this;
      }
      
      public bool HasİnviterName {
        get { return result.hasİnviterName; }
      }
      public string İnviterName {
        get { return result.İnviterName; }
        set { SetİnviterName(value); }
      }
      public Builder SetİnviterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnviterName = true;
        result.inviterName_ = value;
        return this;
      }
      public Builder ClearİnviterName() {
        PrepareBuilder();
        result.hasİnviterName = false;
        result.inviterName_ = "";
        return this;
      }
      
      public bool HasİnviteeName {
        get { return result.hasİnviteeName; }
      }
      public string İnviteeName {
        get { return result.İnviteeName; }
        set { SetİnviteeName(value); }
      }
      public Builder SetİnviteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnviteeName = true;
        result.inviteeName_ = value;
        return this;
      }
      public Builder ClearİnviteeName() {
        PrepareBuilder();
        result.hasİnviteeName = false;
        result.inviteeName_ = "";
        return this;
      }
      
      public bool HasİnvitationMessage {
        get { return result.hasİnvitationMessage; }
      }
      public string İnvitationMessage {
        get { return result.İnvitationMessage; }
        set { SetİnvitationMessage(value); }
      }
      public Builder SetİnvitationMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnvitationMessage = true;
        result.invitationMessage_ = value;
        return this;
      }
      public Builder ClearİnvitationMessage() {
        PrepareBuilder();
        result.hasİnvitationMessage = false;
        result.invitationMessage_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static Invitation() {
      object.ReferenceEquals(global::bnet.protocol.invitation.İnvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Suggestion : pb::GeneratedMessage<Suggestion, Suggestion.Builder> {
    private Suggestion() { }
    private static readonly Suggestion defaultInstance = new Suggestion().MakeReadOnly();
    private static readonly string[] _suggestionFieldNames = new string[] { "channel_id", "suggestee_id", "suggestee_name", "suggester_id", "suggester_name" };
    private static readonly uint[] _suggestionFieldTags = new uint[] { 10, 26, 42, 18, 34 };
    public static Suggestion DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Suggestion DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Suggestion ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_Suggestion__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Suggestion, Suggestion.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable; }
    }
    
    public const int ChanneldFieldNumber = 1;
    private bool hasChanneld;
    private global::bnet.protocol.EntityId channeld_;
    public bool HasChanneld {
      get { return hasChanneld; }
    }
    public global::bnet.protocol.EntityId Channeld {
      get { return channeld_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesterdFieldNumber = 2;
    private bool hasSuggesterd;
    private global::bnet.protocol.EntityId suggesterd_;
    public bool HasSuggesterd {
      get { return hasSuggesterd; }
    }
    public global::bnet.protocol.EntityId Suggesterd {
      get { return suggesterd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesteedFieldNumber = 3;
    private bool hasSuggesteed;
    private global::bnet.protocol.EntityId suggesteed_;
    public bool HasSuggesteed {
      get { return hasSuggesteed; }
    }
    public global::bnet.protocol.EntityId Suggesteed {
      get { return suggesteed_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesterNameFieldNumber = 4;
    private bool hasSuggesterName;
    private string suggesterName_ = "";
    public bool HasSuggesterName {
      get { return hasSuggesterName; }
    }
    public string SuggesterName {
      get { return suggesterName_; }
    }
    
    public const int SuggesteeNameFieldNumber = 5;
    private bool hasSuggesteeName;
    private string suggesteeName_ = "";
    public bool HasSuggesteeName {
      get { return hasSuggesteeName; }
    }
    public string SuggesteeName {
      get { return suggesteeName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuggesterd) return false;
        if (!hasSuggesteed) return false;
        if (HasChanneld) {
          if (!Channeld.IsInitialized) return false;
        }
        if (!Suggesterd.IsInitialized) return false;
        if (!Suggesteed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestionFieldNames;
      if (hasChanneld) {
        output.WriteMessage(1, field_names[0], Channeld);
      }
      if (hasSuggesterd) {
        output.WriteMessage(2, field_names[3], Suggesterd);
      }
      if (hasSuggesteed) {
        output.WriteMessage(3, field_names[1], Suggesteed);
      }
      if (hasSuggesterName) {
        output.WriteString(4, field_names[4], SuggesterName);
      }
      if (hasSuggesteeName) {
        output.WriteString(5, field_names[2], SuggesteeName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChanneld) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Channeld);
        }
        if (hasSuggesterd) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Suggesterd);
        }
        if (hasSuggesteed) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Suggesteed);
        }
        if (hasSuggesterName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, SuggesterName);
        }
        if (hasSuggesteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, SuggesteeName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Suggestion ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Suggestion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Suggestion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Suggestion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Suggestion MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Suggestion prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Suggestion, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Suggestion cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Suggestion result;
      
      private Suggestion PrepareBuilder() {
        if (resultIsReadOnly) {
          Suggestion original = result;
          result = new Suggestion();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Suggestion MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.Suggestion.Descriptor; }
      }
      
      public override Suggestion DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.Suggestion.DefaultInstance; }
      }
      
      public override Suggestion BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Suggestion) {
          return MergeFrom((Suggestion) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Suggestion other) {
        if (other == global::bnet.protocol.invitation.Suggestion.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChanneld) {
          MergeChanneld(other.Channeld);
        }
        if (other.HasSuggesterd) {
          MergeSuggesterd(other.Suggesterd);
        }
        if (other.HasSuggesteed) {
          MergeSuggesteed(other.Suggesteed);
        }
        if (other.HasSuggesterName) {
          SuggesterName = other.SuggesterName;
        }
        if (other.HasSuggesteeName) {
          SuggesteeName = other.SuggesteeName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasChanneld) {
                subBuilder.MergeFrom(Channeld);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Channeld = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasSuggesterd) {
                subBuilder.MergeFrom(Suggesterd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggesterd = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasSuggesteed) {
                subBuilder.MergeFrom(Suggesteed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggesteed = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasSuggesterName = input.ReadString(ref result.suggesterName_);
              break;
            }
            case 42: {
              result.hasSuggesteeName = input.ReadString(ref result.suggesteeName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChanneld {
       get { return result.hasChanneld; }
      }
      public global::bnet.protocol.EntityId Channeld {
        get { return result.Channeld; }
        set { SetChanneld(value); }
      }
      public Builder SetChanneld(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChanneld = true;
        result.channeld_ = value;
        return this;
      }
      public Builder SetChanneld(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChanneld = true;
        result.channeld_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChanneld(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChanneld &&
            result.channeld_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.channeld_ = global::bnet.protocol.EntityId.CreateBuilder(result.channeld_).MergeFrom(value).BuildPartial();
        } else {
          result.channeld_ = value;
        }
        result.hasChanneld = true;
        return this;
      }
      public Builder ClearChanneld() {
        PrepareBuilder();
        result.hasChanneld = false;
        result.channeld_ = null;
        return this;
      }
      
      public bool HasSuggesterd {
       get { return result.hasSuggesterd; }
      }
      public global::bnet.protocol.EntityId Suggesterd {
        get { return result.Suggesterd; }
        set { SetSuggesterd(value); }
      }
      public Builder SetSuggesterd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesterd = true;
        result.suggesterd_ = value;
        return this;
      }
      public Builder SetSuggesterd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggesterd = true;
        result.suggesterd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesterd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggesterd &&
            result.suggesterd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.suggesterd_ = global::bnet.protocol.EntityId.CreateBuilder(result.suggesterd_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesterd_ = value;
        }
        result.hasSuggesterd = true;
        return this;
      }
      public Builder ClearSuggesterd() {
        PrepareBuilder();
        result.hasSuggesterd = false;
        result.suggesterd_ = null;
        return this;
      }
      
      public bool HasSuggesteed {
       get { return result.hasSuggesteed; }
      }
      public global::bnet.protocol.EntityId Suggesteed {
        get { return result.Suggesteed; }
        set { SetSuggesteed(value); }
      }
      public Builder SetSuggesteed(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesteed = true;
        result.suggesteed_ = value;
        return this;
      }
      public Builder SetSuggesteed(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggesteed = true;
        result.suggesteed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesteed(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggesteed &&
            result.suggesteed_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.suggesteed_ = global::bnet.protocol.EntityId.CreateBuilder(result.suggesteed_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesteed_ = value;
        }
        result.hasSuggesteed = true;
        return this;
      }
      public Builder ClearSuggesteed() {
        PrepareBuilder();
        result.hasSuggesteed = false;
        result.suggesteed_ = null;
        return this;
      }
      
      public bool HasSuggesterName {
        get { return result.hasSuggesterName; }
      }
      public string SuggesterName {
        get { return result.SuggesterName; }
        set { SetSuggesterName(value); }
      }
      public Builder SetSuggesterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesterName = true;
        result.suggesterName_ = value;
        return this;
      }
      public Builder ClearSuggesterName() {
        PrepareBuilder();
        result.hasSuggesterName = false;
        result.suggesterName_ = "";
        return this;
      }
      
      public bool HasSuggesteeName {
        get { return result.hasSuggesteeName; }
      }
      public string SuggesteeName {
        get { return result.SuggesteeName; }
        set { SetSuggesteeName(value); }
      }
      public Builder SetSuggesteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesteeName = true;
        result.suggesteeName_ = value;
        return this;
      }
      public Builder ClearSuggesteeName() {
        PrepareBuilder();
        result.hasSuggesteeName = false;
        result.suggesteeName_ = "";
        return this;
      }
    }
    static Suggestion() {
      object.ReferenceEquals(global::bnet.protocol.invitation.İnvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationRequest : pb::ExtendableMessage<SendInvitationRequest, SendInvitationRequest.Builder> {
    private SendInvitationRequest() { }
    private static readonly SendInvitationRequest defaultInstance = new SendInvitationRequest().MakeReadOnly();
    private static readonly string[] _sendInvitationRequestFieldNames = new string[] { "agent_identity", "expiration_time", "invitation_message", "target_id" };
    private static readonly uint[] _sendInvitationRequestFieldTags = new uint[] { 10, 32, 26, 18 };
    public static SendInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationRequest, SendInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentdentityFieldNumber = 1;
    private bool hasAgentdentity;
    private global::bnet.protocol.Identity agentdentity_;
    public bool HasAgentdentity {
      get { return hasAgentdentity; }
    }
    public global::bnet.protocol.Identity Agentdentity {
      get { return agentdentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int TargetdFieldNumber = 2;
    private bool hasTargetd;
    private global::bnet.protocol.EntityId targetd_;
    public bool HasTargetd {
      get { return hasTargetd; }
    }
    public global::bnet.protocol.EntityId Targetd {
      get { return targetd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int İnvitationMessageFieldNumber = 3;
    private bool hasİnvitationMessage;
    private string invitationMessage_ = "";
    public bool HasİnvitationMessage {
      get { return hasİnvitationMessage; }
    }
    public string İnvitationMessage {
      get { return invitationMessage_; }
    }
    
    public const int ExpirationTimeFieldNumber = 4;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetd) return false;
        if (HasAgentdentity) {
          if (!Agentdentity.IsInitialized) return false;
        }
        if (!Targetd.IsInitialized) return false;
        if (!ExtensionsAreInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationRequestFieldNames;
      pb::ExtendableMessage<SendInvitationRequest, SendInvitationRequest.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
      if (hasAgentdentity) {
        output.WriteMessage(1, field_names[0], Agentdentity);
      }
      if (hasTargetd) {
        output.WriteMessage(2, field_names[3], Targetd);
      }
      if (hasİnvitationMessage) {
        output.WriteString(3, field_names[2], İnvitationMessage);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(4, field_names[1], ExpirationTime);
      }
      extensionWriter.WriteUntil(10001, output);
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Agentdentity);
        }
        if (hasTargetd) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Targetd);
        }
        if (hasİnvitationMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(3, İnvitationMessage);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ExpirationTime);
        }
        size += ExtensionsSerializedSize;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::ExtendableBuilder<SendInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationRequest result;
      
      private SendInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationRequest original = result;
          result = new SendInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.SendInvitationRequest.Descriptor; }
      }
      
      public override SendInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance; }
      }
      
      public override SendInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationRequest) {
          return MergeFrom((SendInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationRequest other) {
        if (other == global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentdentity) {
          MergeAgentdentity(other.Agentdentity);
        }
        if (other.HasTargetd) {
          MergeTargetd(other.Targetd);
        }
        if (other.HasİnvitationMessage) {
          İnvitationMessage = other.İnvitationMessage;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
          this.MergeExtensionFields(other);
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasAgentdentity) {
                subBuilder.MergeFrom(Agentdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Agentdentity = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetd) {
                subBuilder.MergeFrom(Targetd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Targetd = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasİnvitationMessage = input.ReadString(ref result.invitationMessage_);
              break;
            }
            case 32: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentdentity {
       get { return result.hasAgentdentity; }
      }
      public global::bnet.protocol.Identity Agentdentity {
        get { return result.Agentdentity; }
        set { SetAgentdentity(value); }
      }
      public Builder SetAgentdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentdentity = true;
        result.agentdentity_ = value;
        return this;
      }
      public Builder SetAgentdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentdentity = true;
        result.agentdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentdentity &&
            result.agentdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.agentdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.agentdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentdentity_ = value;
        }
        result.hasAgentdentity = true;
        return this;
      }
      public Builder ClearAgentdentity() {
        PrepareBuilder();
        result.hasAgentdentity = false;
        result.agentdentity_ = null;
        return this;
      }
      
      public bool HasTargetd {
       get { return result.hasTargetd; }
      }
      public global::bnet.protocol.EntityId Targetd {
        get { return result.Targetd; }
        set { SetTargetd(value); }
      }
      public Builder SetTargetd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetd = true;
        result.targetd_ = value;
        return this;
      }
      public Builder SetTargetd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetd = true;
        result.targetd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetd &&
            result.targetd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetd_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetd_).MergeFrom(value).BuildPartial();
        } else {
          result.targetd_ = value;
        }
        result.hasTargetd = true;
        return this;
      }
      public Builder ClearTargetd() {
        PrepareBuilder();
        result.hasTargetd = false;
        result.targetd_ = null;
        return this;
      }
      
      public bool HasİnvitationMessage {
        get { return result.hasİnvitationMessage; }
      }
      public string İnvitationMessage {
        get { return result.İnvitationMessage; }
        set { SetİnvitationMessage(value); }
      }
      public Builder SetİnvitationMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnvitationMessage = true;
        result.invitationMessage_ = value;
        return this;
      }
      public Builder ClearİnvitationMessage() {
        PrepareBuilder();
        result.hasİnvitationMessage = false;
        result.invitationMessage_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static SendInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.İnvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationResponse : pb::GeneratedMessage<SendInvitationResponse, SendInvitationResponse.Builder> {
    private SendInvitationResponse() { }
    private static readonly SendInvitationResponse defaultInstance = new SendInvitationResponse().MakeReadOnly();
    private static readonly string[] _sendInvitationResponseFieldNames = new string[] { "invitation" };
    private static readonly uint[] _sendInvitationResponseFieldTags = new uint[] { 18 };
    public static SendInvitationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationResponse, SendInvitationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable; }
    }
    
    public const int İnvitationFieldNumber = 2;
    private bool hasİnvitation;
    private global::bnet.protocol.invitation.Invitation invitation_;
    public bool Hasİnvitation {
      get { return hasİnvitation; }
    }
    public global::bnet.protocol.invitation.Invitation İnvitation {
      get { return invitation_ ?? global::bnet.protocol.invitation.Invitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (Hasİnvitation) {
          if (!İnvitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationResponseFieldNames;
      if (hasİnvitation) {
        output.WriteMessage(2, field_names[0], İnvitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasİnvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, İnvitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationResponse result;
      
      private SendInvitationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationResponse original = result;
          result = new SendInvitationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.SendInvitationResponse.Descriptor; }
      }
      
      public override SendInvitationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance; }
      }
      
      public override SendInvitationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationResponse) {
          return MergeFrom((SendInvitationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationResponse other) {
        if (other == global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.Hasİnvitation) {
          Mergeİnvitation(other.İnvitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::bnet.protocol.invitation.Invitation.Builder subBuilder = global::bnet.protocol.invitation.Invitation.CreateBuilder();
              if (result.hasİnvitation) {
                subBuilder.MergeFrom(İnvitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              İnvitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool Hasİnvitation {
       get { return result.hasİnvitation; }
      }
      public global::bnet.protocol.invitation.Invitation İnvitation {
        get { return result.İnvitation; }
        set { Setİnvitation(value); }
      }
      public Builder Setİnvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasİnvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder Setİnvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasİnvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder Mergeİnvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasİnvitation &&
            result.invitation_ != global::bnet.protocol.invitation.Invitation.DefaultInstance) {
            result.invitation_ = global::bnet.protocol.invitation.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasİnvitation = true;
        return this;
      }
      public Builder Clearİnvitation() {
        PrepareBuilder();
        result.hasİnvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static SendInvitationResponse() {
      object.ReferenceEquals(global::bnet.protocol.invitation.İnvitation.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GenericRequest : pb::GeneratedMessage<GenericRequest, GenericRequest.Builder> {
    private GenericRequest() { }
    private static readonly GenericRequest defaultInstance = new GenericRequest().MakeReadOnly();
    private static readonly string[] _genericRequestFieldNames = new string[] { "agent_id", "invitation_id", "target_id" };
    private static readonly uint[] _genericRequestFieldTags = new uint[] { 10, 25, 18 };
    public static GenericRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GenericRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GenericRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_GenericRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GenericRequest, GenericRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.İnvitation.internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable; }
    }
    
    public const int AgentdFieldNumber = 1;
    private bool hasAgentd;
    private global::bnet.protocol.EntityId agentd_;
    public bool HasAgentd {
      get { return hasAgentd; }
    }
    public global::bnet.protocol.EntityId Agentd {
      get { return agentd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetdFieldNumber = 2;
    private bool hasTargetd;
    private global::bnet.protocol.EntityId targetd_;
    public bool HasTargetd {
      get { return hasTargetd; }
    }
    public global::bnet.protocol.EntityId Targetd {
      get { return targetd_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int İnvitationdFieldNumber = 3;
    private bool hasİnvitationd;
    private ulong invitationd_;
    public bool Hasİnvitationd {
      get { return hasİnvitationd; }
    }
    public ulong İnvitationd {
      get { return invitationd_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasİnvitationd) return false;
        if (HasAgentd) {
          if (!Agentd.IsInitialized) return false;
        }
        if (HasTargetd) {
          if (!Targetd.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _genericRequestFieldNames;
      if (hasAgentd) {
        output.WriteMessage(1, field_names[0], Agentd);
      }
      if (hasTargetd) {
        output.WriteMessage(2, field_names[2], Targetd);
      }
      if (hasİnvitationd) {
        output.WriteFixed64(3, field_names[1], İnvitationd);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentd) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Agentd);
        }
        if (hasTargetd) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Targetd);
        }
        if (hasİnvitationd) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, İnvitationd);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GenericRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GenericRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GenericRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GenericRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GenericRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GenericRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GenericRequest result;
      
      private GenericRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GenericRequest original = result;
          result = new GenericRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GenericRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.GenericRequest.Descriptor; }
      }
      
      public override GenericRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.GenericRequest.DefaultInstance; }
      }
      
      public override GenericRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GenericRequest) {
          return MergeFrom((GenericRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GenericRequest other) {
        if (other == global::bnet.protocol.invitation.GenericRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentd) {
          MergeAgentd(other.Agentd);
        }
        if (other.HasTargetd) {
          MergeTargetd(other.Targetd);
        }
        if (other.Hasİnvitationd) {
          İnvitationd = other.İnvitationd;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_genericRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _genericRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentd) {
                subBuilder.MergeFrom(Agentd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Agentd = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetd) {
                subBuilder.MergeFrom(Targetd);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Targetd = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasİnvitationd = input.ReadFixed64(ref result.invitationd_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentd {
       get { return result.hasAgentd; }
      }
      public global::bnet.protocol.EntityId Agentd {
        get { return result.Agentd; }
        set { SetAgentd(value); }
      }
      public Builder SetAgentd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentd = true;
        result.agentd_ = value;
        return this;
      }
      public Builder SetAgentd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentd = true;
        result.agentd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentd &&
            result.agentd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentd_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentd_).MergeFrom(value).BuildPartial();
        } else {
          result.agentd_ = value;
        }
        result.hasAgentd = true;
        return this;
      }
      public Builder ClearAgentd() {
        PrepareBuilder();
        result.hasAgentd = false;
        result.agentd_ = null;
        return this;
      }
      
      public bool HasTargetd {
       get { return result.hasTargetd; }
      }
      public global::bnet.protocol.EntityId Targetd {
        get { return result.Targetd; }
        set { SetTargetd(value); }
      }
      public Builder SetTargetd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetd = true;
        result.targetd_ = value;
        return this;
      }
      public Builder SetTargetd(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetd = true;
        result.targetd_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetd(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetd &&
            result.targetd_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetd_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetd_).MergeFrom(value).BuildPartial();
        } else {
          result.targetd_ = value;
        }
        result.hasTargetd = true;
        return this;
      }
      public Builder ClearTargetd() {
        PrepareBuilder();
        result.hasTargetd = false;
        result.targetd_ = null;
        return this;
      }
      
      public bool Hasİnvitationd {
        get { return result.hasİnvitationd; }
      }
      public ulong İnvitationd {
        get { return result.İnvitationd; }
        set { Setİnvitationd(value); }
      }
      public Builder Setİnvitationd(ulong value) {
        PrepareBuilder();
        result.hasİnvitationd = true;
        result.invitationd_ = value;
        return this;
      }
      public Builder Clearİnvitationd() {
        PrepareBuilder();
        result.hasİnvitationd = false;
        result.invitationd_ = 0;
        return this;
      }
    }
    static GenericRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.İnvitation.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
